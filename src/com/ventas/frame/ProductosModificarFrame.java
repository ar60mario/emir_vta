/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ventas.frame;

import com.ventas.entities.Producto;
import java.text.DecimalFormat;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Mario
 */
public class ProductosModificarFrame extends javax.swing.JFrame {

    private List<Producto> productos;
    private DecimalFormat df = new DecimalFormat("#0.00");

    /**
     * Creates new form ProductosModificarFrame
     */
    public ProductosModificarFrame() {
        initComponents();
        getContentPane().setBackground(new java.awt.Color(100, 100, 255));
        this.setLocationRelativeTo(null);
        eliminarBtn.setVisible(false);
        eliminadosBtn.setVisible(false);
        limpiarCampos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        codigoDeTxt = new javax.swing.JTextField();
        codigoAlTxt = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        modificarBtn = new javax.swing.JButton();
        eliminarBtn = new javax.swing.JButton();
        volverBtn = new javax.swing.JButton();
        eliminadosBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("MODIFICAR PRODUCTOS");

        jLabel1.setText("Desde código:");

        jLabel2.setText("Hasta código:");

        codigoDeTxt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        codigoDeTxt.setText("COD DE");
        codigoDeTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                codigoDeTxtKeyPressed(evt);
            }
        });

        codigoAlTxt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        codigoAlTxt.setText("COD AL");
        codigoAlTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                codigoAlTxtKeyPressed(evt);
            }
        });

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Detalle", "Costo", "Lista 1", "Lista 2", "Lista 3", "Precio", "Impuesto"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabla);
        if (tabla.getColumnModel().getColumnCount() > 0) {
            tabla.getColumnModel().getColumn(1).setPreferredWidth(270);
        }

        modificarBtn.setText("Modificar");
        modificarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificarBtnActionPerformed(evt);
            }
        });

        eliminarBtn.setText("Eliminar");
        eliminarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarBtnActionPerformed(evt);
            }
        });

        volverBtn.setText("Volver");
        volverBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                volverBtnActionPerformed(evt);
            }
        });

        eliminadosBtn.setText("Eliminados");
        eliminadosBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminadosBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 981, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(codigoDeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(codigoAlTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(modificarBtn)
                        .addGap(18, 18, 18)
                        .addComponent(eliminarBtn)
                        .addGap(18, 18, 18)
                        .addComponent(eliminadosBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(volverBtn)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(codigoDeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(codigoAlTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 448, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(modificarBtn)
                    .addComponent(eliminarBtn)
                    .addComponent(volverBtn)
                    .addComponent(eliminadosBtn))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void codigoDeTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_codigoDeTxtKeyPressed
        if (evt.getKeyCode() == 10) {
            if (!codigoDeTxt.getText().isEmpty()) {
                codigoAlTxt.requestFocus();
            }
        }
    }//GEN-LAST:event_codigoDeTxtKeyPressed

    private void codigoAlTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_codigoAlTxtKeyPressed
        if (evt.getKeyCode() == 10) {
            if (!codigoAlTxt.getText().isEmpty()) {
                llenarTabla();
            }
        }
    }//GEN-LAST:event_codigoAlTxtKeyPressed

    private void modificarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificarBtnActionPerformed
        modificar();
    }//GEN-LAST:event_modificarBtnActionPerformed

    private void eliminarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarBtnActionPerformed
        eliminar();
    }//GEN-LAST:event_eliminarBtnActionPerformed

    private void eliminadosBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminadosBtnActionPerformed
//        eliminados();
    }//GEN-LAST:event_eliminadosBtnActionPerformed

    private void volverBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_volverBtnActionPerformed
        volver();
    }//GEN-LAST:event_volverBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProductosModificarFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProductosModificarFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProductosModificarFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProductosModificarFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProductosModificarFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField codigoAlTxt;
    private javax.swing.JTextField codigoDeTxt;
    private javax.swing.JButton eliminadosBtn;
    private javax.swing.JButton eliminarBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton modificarBtn;
    private javax.swing.JTable tabla;
    private javax.swing.JButton volverBtn;
    // End of variables declaration//GEN-END:variables

    private void volver() {
        MainFrame mf = new MainFrame();
        mf.setVisible(true);
        this.dispose();
    }

    private void eliminados() {
        ProductosEliminadosFrame pef = new ProductosEliminadosFrame();
        pef.setVisible(true);
        this.dispose();
    }

    private void eliminar() {

    }

    private void modificar() {
        int row = tabla.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(this, "DEBE SELECCIONAR UN PRODUCTO PARA MODIFICAR");
            return;
        }
        Producto producto = productos.get(row);
        ProductoEditarFrame pef = new ProductoEditarFrame(producto);
        //ConsultarPrecioFrame pef = new ConsultarPrecioFrame();
        pef.setVisible(true);
        this.dispose();
    }

    private void llenarTabla() {
//        Object tb[] = new Object[2];
//        tb[0]="1";
//        DefaultTableModel tbl1 = (DefaultTableModel) tabla.getModel();
//        tbl1.addRow(tb);
////        tbl1.addRow(tb);
//        tabla.setModel(tbl1);
//        Integer ci = UtilFacturas.getCantidadItems(tabla);
//        Rectangle rect = tabla.getCellRect(ci - 1, 0, true);
//        tabla.scrollRectToVisible(rect);
//        tabla.clearSelection();
//        tabla.setRowSelectionInterval(ci - 1, ci - 1);
//        JOptionPane.showMessageDialog(this, ci);
        UtilFrame.limpiarTabla(tabla);
        
        int cod1 = Integer.valueOf((codigoDeTxt.getText()));
        int cod2 = Integer.valueOf((codigoAlTxt.getText()));
        productos = null;
        try {
            productos = new ProductoService().getAllProductosByCodigos(cod1, cod2);
        } catch (Exception ex) {
            Logger.getLogger(ProductosModificarFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (productos != null && !productos.isEmpty()) {
//            UtilTabla1 ut = new UtilTabla1();
//            tabla.setDefaultRenderer(Object.class, ut);
            DefaultTableModel tbl = (DefaultTableModel) tabla.getModel();
//            tabla.setDefaultRenderer(Object.class, ut);
            for (Producto p : productos) {
                Object o[] = new Object[8];
                o[0] = p.getCodigo();
                o[1] = p.getDetalle();
                if (p.getCosto() != null) {
                    o[2] = df.format(p.getCosto());
                } else {
                    o[2] = df.format(0.00);
                }
                if (p.getLista1() != null) {
                    o[3] = df.format(p.getLista1());
                } else {
                    o[3] = df.format(0.00);
                }
                if (p.getLista2() != null) {
                    o[4] = df.format(p.getLista2());
                } else {
                    o[4] = df.format(0.00);
                }
                if (p.getLista3() != null) {
                    o[5] = df.format(p.getLista3());
                } else {
                    o[5] = df.format(0.00);
                }
                if (p.getPrecio() != null) {
                    o[6] = df.format(p.getPrecio());
                } else {
                    o[6] = df.format(0.00);
                }
                if (p.getImpuesto() != null) {
                    o[7] = df.format(p.getImpuesto());
                } else {
                    o[7] = df.format(0.00);
                }
                tbl.addRow(o);
            }
            tabla.setModel(tbl);
        }
    }

    private void limpiarCampos() {
        UtilTabla1 ut = new UtilTabla1();
        tabla.setDefaultRenderer(Object.class, ut);
        UtilFrame.limpiarTabla(tabla);
        codigoDeTxt.setText("");
        codigoAlTxt.setText("");
    }
}
